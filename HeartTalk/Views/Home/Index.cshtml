@{
    ViewData["Title"] = "Home Page";
}
@using System.IO.Compression
@using Microsoft.AspNetCore.Mvc.Routing

@* we must have just one model in page and because of this reason we create class to have both IEnumerable<HeartTalk.Models.Note> and Note *@

@model NoteViewModel
 <form method="post">
    <input asp-for="NewNote.Content"/>
    <button asp-route="AddNote">Send Heart Talk</button>
</form>


<div class="dropdown p-5">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        فیلتر نمایش
    </button>
    <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="@Url.Action("FilterNotesWithSympathyCount","Home")">تعداد همدلی</a></li>
        <li><a class="dropdown-item" href="#">Another action</a></li>
        <li><a class="dropdown-item" href="#">Something else here</a></li>
    </ul>
</div>



@foreach (var note in Model.Notes)
{
    <div class="card mb-3">
        <div class="card-body">
            <p class="card-text" dir="rtl">@note.Content</p>
            <p class="text-muted">Posted on: @note.DatePosted</p>
            <p class="text-muted"> @note.SympathyCount</p>
            <form method="post">
                <input asp-for="NewNote.Id" value=@note.Id />
                <button asp-route="AddSympathy">Like</button>
            </form>
        </div>
    </div>
}



<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
