@{
    ViewData["Title"] = "Home Page";
}
@using System.IO.Compression
@using Microsoft.AspNetCore.Mvc.Routing

@* we must have just one model in page and because of this reason we create class to have both IEnumerable<HeartTalk.Models.Note> and Note *@

@model NoteViewModel
 <form method="post">
    <input asp-for="NewNote.Content"/>
    <button asp-route="AddNote">Send Heart Talk</button>
</form>


<div class="dropdown p-5">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        فیلتر نمایش
    </button>
    <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="@Url.Action("FilterNotesWithSympathyCount","Home")">تعداد همدلی</a></li>
        <li><a class="dropdown-item" href="@Url.Action("FilterNotesWithDate","Home")">تاریخ</a></li>
        <li><a class="dropdown-item" href="#">Something else here</a></li>
    </ul>
</div>



@foreach (var note in Model.Notes)
{
    //create dynamic id for each note , note-1,note-2 ,...
    <div id="note-@note.Id" class="card mb-3">
        @await Html.PartialAsync("_NotePartial", note)
    </div>
}



<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    //name of addSympathy function is bind with sympathy button in _NotePartial
    // use ajax to post from Client to server 
    function addSympathy(noteId) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AddSympathy", "Home")',
            data: { noteId: noteId },
            success: function (response) {
                // Update the specific note's div with the updated partial view
                // breakdown code 
                $('#note-' + noteId).html(response);
            },
        });
    }
</script>